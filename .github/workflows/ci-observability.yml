name: ci-observability
on:
  push: { branches: [ main, v4.0-ollama ] }
  pull_request:
jobs:
  test:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests with tracing
        shell: bash
        env:
          PYTHONPATH: .
          OBS_BACKENDS: jsonl
          TRACE_SERVICE_NAME: pythonproject_xx
          TRACE_JSONL_PATH: trace_log.jsonl
        run: |
          set -o pipefail
          unset PYTEST_DISABLE_PLUGIN_AUTOLOAD || true

          python - <<'PY'
import pkgutil, pytest, sys
print("PYVER=", sys.version)
print("PYTEST=", pytest.__version__)
print("PLUGINS_PKG=", [m.name for m in pkgutil.iter_modules() if m.name.startswith("pytest_")])
PY

          python -m pytest -vv --maxfail=1 --disable-warnings             -o asyncio_mode=auto             --cov=. --cov-report=xml:coverage.xml             --junitxml=pytest-report.xml 2>&1 | tee -a pytest-console.log
          test ${PIPESTATUS[0]} -eq 0
      - name: Coverage gate (warn @60%, fail @50%)
        run: |
          python - <<'PY'
import sys, xml.etree.ElementTree as ET
tree = ET.parse('coverage.xml'); cov=float(tree.getroot().get('line-rate',0))*100
print(f"COVERAGE={cov:.2f}%")
warn, fail = 60.0, 50.0
sys.exit(1 if cov < fail else 0)
PY

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            coverage.xml
            pytest-report.xml
            pytest-console.log
            trace_log.jsonl
