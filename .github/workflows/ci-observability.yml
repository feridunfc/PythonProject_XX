name: CI Observability

on:
  push:
    branches: [ feature-security-and-sprint ]
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  traces:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install "pydantic-settings>=2.3" \
                      "opentelemetry-exporter-otlp-proto-http==1.37.0" \
                      pytest-cov pytest-asyncio pytest-anyio \
                      opentelemetry-api opentelemetry-sdk opentelemetry-exporter-otlp
          python -c "import importlib, pkgutil, pydantic; \
            print('pydantic', pydantic.__version__); \
            print('has pydantic_settings', bool(pkgutil.find_loader('pydantic_settings'))); \
            importlib.import_module('opentelemetry.exporter.otlp.proto.http.trace_exporter'); \
            print('ok: otlp http exporter')"

      - name: Pre-create logs (always)
        if: always()
        run: |
          : > trace_log.jsonl
          : > pytest-console.log

      - name: Run tests with tracing
        env:
          PYTHONPATH: .
          MOCK_AI: "true"
          OBS_BACKENDS: jsonl
          TRACE_SERVICE_NAME: pythonproject_xx
          TRACE_JSONL_PATH: trace_log.jsonl
          PYTEST_DISABLE_PLUGIN_AUTOLOAD: "1"
          PYTEST_ADDOPTS: "-p pytest_asyncio -p pytest_anyio -p pytest_cov"
        run: |
          set -o pipefail
          python -c "from utils.otel_tracer import init_tracer; init_tracer(); print('OTel tracer initialized.')"
          python -m pytest -vv --maxfail=1 --disable-warnings \
                 --cov=. --cov-report=xml:coverage.xml \
                 --junitxml=pytest-report.xml 2>&1 | tee -a pytest-console.log
          test ${PIPESTATUS[0]} -eq 0

      - name: Print diagnostics (always)
        if: always()
        run: |
          echo "== ls -la =="; ls -la
          echo "== pytest-report head =="; head -n 80 pytest-report.xml || true
          echo "== coverage head =="; head -n 40 coverage.xml || echo "no coverage.xml"
          echo "== trace tail =="; tail -n 120 trace_log.jsonl || true
          echo "== console head =="; head -n 120 pytest-console.log || true

      - name: Upload observability artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: observability-artifacts
          path: |
            trace_log.jsonl
            coverage.xml
            pytest-report.xml
            pytest-console.log
          if-no-files-found: warn
          retention-days: 7
